:ruby

  script = local_assigns[:script] || Script.twenty_hour_script
  script_level = local_assigns[:script_level]
  level = local_assigns[:level]
  full_width = local_assigns[:full_width]

  show_bug_links = script_level || (level && level.try(:is_project_level))

  user_type = nil

  header_class = 'header-wrapper'
  header_class = header_class + (show_bug_links ? ' feedback-bug-links' : '')
  header_class = header_class + (script_level || level ? ' hide_on_mobile' : '')

  if current_user
    if current_user.teacher?
      user_type = "teacher"
    elsif current_user.student?
      user_type = "student"
    end
  end

  if !current_user
    cookie_key = environment_specific_cookie_name('_user_type')
    user_type = request.cookies[cookie_key]
    user_type = "student" if user_type == "student_y"
  end

  hamburger_options = {}
  hamburger_options[:level] = level
  hamburger_options[:script_level] = script_level
  hamburger_options[:user_type] = user_type
  hamburger_options[:language] = request.language
  hamburger_options[:show_gallery] = true
  hamburger_options[:loc_prefix] = "nav.header."
  hamburger_options[:page_mode] = request.cookies['pm']

  header_contents_options = {}
  header_contents_options[:user_type] = user_type
  header_contents_options[:language] = request.language
  header_contents_options[:loc_prefix] = "nav.header."
  header_contents_options[:page_mode] = request.cookies['pm']

  should_show_progress = script_level || @stage_extras

  sign_in_user = current_user || user_type && OpenStruct.new(
    id: nil,
    short_name: I18n.t("nav.user.#{user_type}"),
    can_pair?: false
  )
  show_pairing_dialog = !!session.delete(:show_pairing_dialog)

  user_header_options = {}
  user_header_options[:current_user] = sign_in_user
  user_header_options[:show_pairing_dialog] = show_pairing_dialog
  user_header_options[:session_pairings] = session[:pairings]
  user_header_options[:loc_prefix] = 'nav.user.'
  user_header_options[:level] = level

  require 'cdo/hamburger'

= console if @use_web_console

= render partial: 'layouts/unsupported_browser'

%link{:href=>'/shared/css/hamburger.css', :rel=>'stylesheet'}

%div{class: header_class}
  .navbar-static-top.header
    .container{style: (full_width ? 'width: 880px;' : '')}
      .navbar-header
        .row.header_row
          .header_left
            .header_logo
              // Edraak Logo
              //- if current_user
              //  = link_to(image_tag('https://www.edraak.org/static/images/logo-light-ar.png'), '/home', {id: "logo_home_link"})
              //- else
              //  = link_to(image_tag('https://www.edraak.org/static/images/logo-light-ar.png'), CDO.code_org_url, {id: "logo_home_link"})
              = link_to(image_tag('https://www.edraak.org/static/images/logo-dark-ar.png'), '/', {id: "logo_home_link"})
              // .project_info
          .header_middle
            - if should_show_progress
              = render partial: 'shared/header_progress'
            // Removed in Edraak header
            //- elsif level
            //- else
            //  .headerlinks.hide_on_tablet
            //    - Hamburger.get_header_contents(header_contents_options).each do |entry|
            //     %a.headerlink{id: entry[:id], href: entry[:url]}= entry[:title]

          .header_right
            // Edited to match Edraak header
            //- if !@hide_sign_in_option && signin_button_enabled
            //  %span#sign_in_or_user
            //    = render file: Rails.root.join('..', 'shared', 'haml', 'user_header.haml'), locals: user_header_options
            //= render file: Rails.root.join('..', 'shared', 'haml', 'help_button.haml'), locals: hamburger_options
            //= render file: Rails.root.join('..', 'shared', 'haml', 'hamburger.haml'), locals: hamburger_options
            %span#sign_in_or_user
              = render file: Rails.root.join('..', 'shared', 'haml', 'user_header.haml'), locals: user_header_options

- if request.path == "/home"
  #header-banner{class: "header-banner-short", style: 'background-image: url("/shared/images/banners/teacher-homepage-hero.jpg")'}
- elsif request.path == "/courses"
  #header-banner.header-banner-courses{class: user_type ? "header-banner-short" : "", style: "background-image: url(\"/shared/images/banners/#{@header_banner_image_filename}.jpg\")"}
- if ["/projects", "/projects/public", "/projects/libraries"].include? request.path
  #header-banner.header-banner-short{style: 'background-image: url("/shared/images/banners/project-banner.jpg")'}

- if should_show_progress
  - view_as = @user || current_user
  - user_progress = current_user == nil ? 'null' : summarize_user_progress(script, view_as, view_as == current_user && @public_caching).to_json

  - if view_as
    - lesson_extras_enabled = view_as.lesson_extras_enabled?(script)

  -# don't trust outside content in parameter :puzzle_page - should be integer, so immediately call to_i
  - puzzle_page = params[:puzzle_page] ? params[:puzzle_page].to_i : ApplicationHelper::PUZZLE_PAGE_NONE

  - if script_level
    - uid = params[:puzzle_page] ? "#{script_level.level_id}_#{puzzle_page - 1}" : script_level.level_id.to_s
  - else
    /A bit of an abuse of uid, we dont have a specific level id in this case, so just use a hardcoded string
    - uid = SharedConstants::LEVEL_KIND.stage_extras

  - script_data = script.summarize_header
  - stage_data = (@stage || script_level.lesson).summarize
  -# If caching, we don't know the sign in state, and should be nil
  - signed_in = @public_caching ? 'null' : !brakeman_no_warn(current_user).nil?
  :javascript
    //<![CDATA[
    dashboard.header.build(
      #{script_data.to_json},
      #{stage_data.to_json},
      #{user_progress},
      "#{uid}",
      #{puzzle_page},
      #{signed_in},
      #{lesson_extras_enabled || 'null'}
    )
    //]]>

- content_for(:body_scripts) do
  %script{type: "text/javascript", src: webpack_asset_path('js/layouts/_header.js')}

:javascript
  // Set of hacks to implement lightweight login based on the edx-user-info cookie.
  var EdraakCodeDotOrgHacks = function() {
    var getCookieValue = function(name) {
            // Get a cookie.
            // Source: https://stackoverflow.com/a/25490531
      var value = document.cookie.match('(^|;)\\s*' + name + '\\s*=\\s*([^;]+)');
      return value ? value.pop() : '';
    }

    var getUserInfo = function () {
      var edXUserInfoCookie = getCookieValue('edx-user-info');
      if (edXUserInfoCookie) {
        try {
          return JSON.parse(JSON.parse(edXUserInfoCookie.replace(/\\054/g, ',')));
        } catch (e) {
          console.log(e);
        }
      } else if (location.origin.startsWith('https://code.') || location.origin.startsWith('http://code.')) {
        return null;
      } else {
        return {
          "username": "dev_user",
          "version": 1,
          "enrollmentStatusHash": "95eb2335a1f96bdd456ce1306c1aa57b",
          "header_urls": {
            "logout": "https://courses.edraak.org/logout",
            "account_settings": "https://courses.edraak.org/account/settings"}
        };
      }
    }

    var shouldAuthenticate = function() {
      // Require authentication only on production and staging servers.
      if (getUserInfo()) {
        // Usable cookie was found no need for authentication.
        return false;
      }
      return true;
    }

    var main = function() {
      if (shouldAuthenticate()) {
        var programsBase = location.origin.replace('://code.', '://programs.');
        location.href = programsBase + '/login/?next=' + encodeURIComponent(location.href);
        return  // Don't do anything else.
      }

      var userInfo = getUserInfo();
      var headerButton = document.querySelector('.header_right>#sign_in_or_user');
      headerButton.innerHTML = (
        "<div class='header_button header_user user_menu'> " +
        "<span class='display_name' data-id='65145912' " +
        "      data-shortname='" + userInfo.username + "'>" + userInfo.username + "</span> " +
        "&nbsp; " +
        "<i class='fa fa-caret-down user_menu_arrow_down'></i> " +
        "<i class='fa fa-caret-up user_menu_arrow_up' style='display: none'></i> " +
        "<div class='user_options' style='display: none'> " +
        // "    <a class='linktag' href='" + userInfo.header_urls.account_settings + "' id='user-edit'>إعدادات الحساب</a> " +
        "    <a class='linktag' href='" + userInfo.header_urls.logout + "' id='user-signout'>تسجيل الخروج</a> " +
        "</div> " +
        "</div> "
      );
    };

    main();
  };

  EdraakCodeDotOrgHacks();
